<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hexo学习系列（一）</title>
    <link href="/2020/07/15/hexo1/"/>
    <url>/2020/07/15/hexo1/</url>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.bootcss.com/" target="_blank" rel="noopener">hexo官方网站</a></p><h1 id="搭建博客的准备工作"><a href="#搭建博客的准备工作" class="headerlink" title="搭建博客的准备工作"></a>搭建博客的准备工作</h1><ol><li>下载node.js</li><li>下载git</li></ol><p>安装直接一路就行了，最好找个教程看看，因为其中有一步选的不合试，还得自己配置环境变量，也有选项直接是帮你配置好的。看自己情况即可</p><p>git安装教程：<a href="https://blog.csdn.net/sanxd/article/details/82624127?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">传送门</a></p><p>如果发现git在cmd中输入git找不到命令是因为没有配置环境变量，需要自己配置环境静变量<a href="https://www.cnblogs.com/-mrl/p/11246666.html" target="_blank" rel="noopener">传送门</a></p><p>另外这个其实也不需要一定要配置，也可以直接在git bash中直接运行即可。</p><h1 id="hexo搭建博客"><a href="#hexo搭建博客" class="headerlink" title="hexo搭建博客"></a>hexo搭建博客</h1><p>以上两个应用安装后，通过以下命令来测试：<br><code>node -v</code>        测试node版本，有版本信息即说明安装成功<br><code>git version</code>    测试git版本，同上<br>以上两步，如果是找不到命令，一般情况就是配置环境变量有问题或者说没有配置环境变量</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>以下是一键部署命令</p><div class="hljs"><pre><code class="hljs c++">npm install hexo-cli -ghexo init blogcd blognpm installhexo server</code></pre></div><p>对上述命令进行分析：</p><p>搭建hexo环境：<br>先在某盘(这里是E盘)下创建个文件夹Project</p><p>打开cmd到Project目录下执行命令</p><ol><li><code>npm install hexo-cli -g</code></li></ol><p>安装hexo（cli就是命令行，接口，这里如果安装缓慢可以使用淘宝镜像源</p><p><code>npm config set registry https://registry.npm.taobao.org</code>，然后在执行该命令）</p><p>两种方式搭建hexo</p><ol><li><p>在project下新建一个blog文件夹然后打开blog执行<code>hexo init</code>就会创建hexo</p></li><li><p>在project下 执行 <code>hexo init blog</code> 同上述操作一样，但执行完后cmd要在blog目录下去执行其他命令</p></li></ol><p><strong>说明</strong>：生成我们所需要的文件，这里可能会出错，err，然后我们可以进入到生成的文件，在运行 npm  install 把刚才没有装上的包再装一下，这里你会发现blog下有8个文件，如果没有，说明少安装了，可以通过npm cache clean –force  清理一下缓存再使用npm install 命令安装 成功安装8个文件即可</p><p><strong>注意</strong>：以下命令在cmd中执行，当创建完blog文件夹时，所有命令都是在blog目录下执行</p><ol start="2"><li><code>cd blog</code></li><li><code>npm install</code></li><li><code>hexo server</code></li></ol><p>s就是serve的意思，复制网址到浏览器即可在本地查看到一个静态网页  </p><p>此时静态网页框架已经搭好：执行完hexo s（可以缩写）命令，复制网址在浏览器中打开即可看到网站。</p><h1 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h1><p>可以放到网上，一般静态网页直接放到github或者码云上，动态网页可去买服务器</p><p>先去<a href="https://github.com/" target="_blank" rel="noopener">github</a>上注册,注册后想要上传到github上之前必须保证git操作连接到github,注册之后记得创建仓库，仓库名必须是&lt;github用户名&gt;.github.io</p><p>在blog目录下执行：</p><p><code>git config --global user.name &quot;github用户名&quot;</code></p><p>引号里边是github的用户名</p><p><code>git config --global user.email &quot;绑定的邮箱&quot;</code></p><p>绑定github上的邮箱</p><p>然后再github上点击setting是（注意不是仓库里的settings）</p><p>找到ssh and gpg keys之后new ssh key</p><h3 id="创建公钥的方法："><a href="#创建公钥的方法：" class="headerlink" title="创建公钥的方法："></a>创建公钥的方法：</h3><p>该目的是构建本地与github上的链接，基于ssh协议，详情请访问：<a href="https://blog.csdn.net/qq_43566782/article/details/107499258" target="_blank" rel="noopener">传送门</a></p><p>在cmd或者git上输入</p><p><code>ssh-keygen -t rsa -C &quot;注册的邮箱&quot;</code></p><p><code>cat ~/.ssh/id_rsa.pub</code></p><p>拷贝下来复制到github上</p><p><code>ssh -T git@github.com</code></p><p>验证是否认证成功</p><p>成功后，进入blog目录下找到_config.yml,这是博客的配置文件。用vscode或者文本编辑器打开修改(一定要注意空格)</p><p>url：<code>http://&lt;用户名&gt;github.io/仓库名</code></p><p>例如：<code>https://pingfan443.github.io/pingfan443.github.io</code></p><p>root：/</p><p>然后再最底下修改仓库</p><p> repository: </p><p>  github: <code>git@github.com:pingfan443/pingfan443.github.io.git</code></p><p><code>此处用ssr协议</code></p><p>最后在本地通过以下命令上传</p><div class="hljs"><pre><code class="hljs c++"># Hexo会根据配置文件渲染出一套静态页面hexo g# 将上一步渲染出的一系列文件上传至至Github Pageshexo d# 也可以直接输入此命令，直接完成渲染和上传hexo g -d</code></pre></div><h2 id="Github-pages"><a href="#Github-pages" class="headerlink" title="Github pages"></a>Github pages</h2><p>当你创建完第一个仓库后，点击右上角settings进去找到github pages source下选择master分支，然后把上述链接打开就能发现你自己的静态网页了，上述内容来自你master下所显示的内容</p><h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><ol><li><code>hexo new &quot;post title&quot;</code></li></ol><p><strong>说明</strong>：hexo new 命令默认是生成博客文章，但是同样也可以生成草稿以及纯文件，生成的文章在source/_posts下</p><p>引号里边是文章标题<br>然后通过vscode打开blog文件，找到source下的你写的那个标题”post title”可以在里边用markdown格式写一些东西，例如：(会md语法即可)</p><div class="hljs"><pre><code class="hljs c++"># 标题一## 标题二### 标题<span class="hljs-number">3</span>*这是斜体*--这是横线--<span class="hljs-number">1.</span> 有序列表&gt; 引用</code></pre></div><p>需要vscode的：<a href="https://www.bilibili.com/video/BV1W7411T7NZ" target="_blank" rel="noopener">vscode安装教程附带python安装环境</a></p><p>总结：搭建的过程中遇到了很多问题，看了很多大佬的文章，以下推荐阅读</p><p><a href="[https://yafine-blog.cn/posts/4ab2.html#1-1-Node-js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE](https://yafine-blog.cn/posts/4ab2.html#1-1-Node-js的安装与配置)">Hexo+github 搭建博客 (超级详细版，精细入微)</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo搭建博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>五子棋</title>
    <link href="/2020/07/04/gamechess/"/>
    <url>/2020/07/04/gamechess/</url>
    
    <content type="html"><![CDATA[<h1 id="五子棋"><a href="#五子棋" class="headerlink" title="五子棋"></a>五子棋</h1><p>界面：</p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs/20200715155425.png" srcset="/img/loading.gif" style="zoom:50%;" /><h2 id="特色："><a href="#特色：" class="headerlink" title="特色："></a>特色：</h2><p>有八张棋盘图片和十张棋子图片供选择</p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs/20200715155921.png" srcset="/img/loading.gif" style="zoom: 50%;" /><p>排行榜的信息</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs/20200715160305.png" srcset="/img/loading.gif" alt=""></p><h2 id="类名"><a href="#类名" class="headerlink" title="类名"></a>类名</h2><h3 id="Wymain-java"><a href="#Wymain-java" class="headerlink" title="Wymain.java"></a>Wymain.java</h3><blockquote><p>棋盘的窗体，以及监听事件</p></blockquote><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> game2;<span class="hljs-keyword">import</span> java.awt.event.ActionEvent;<span class="hljs-keyword">import</span> java.awt.event.ActionListener;<span class="hljs-keyword">import</span> java.util.Random;<span class="hljs-keyword">import</span> javax.swing.JFrame;<span class="hljs-keyword">import</span> javax.swing.JMenu;<span class="hljs-keyword">import</span> javax.swing.JMenuBar;<span class="hljs-keyword">import</span> javax.swing.JMenuItem;<span class="hljs-keyword">import</span> javax.swing.JOptionPane;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Wumain</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JFrame</span></span>&#123;<span class="hljs-comment">/**</span><span class="hljs-comment"> * </span><span class="hljs-comment"> */</span>pan p = <span class="hljs-keyword">null</span>;<span class="hljs-comment">//棋盘</span>JMenuBar menuber = <span class="hljs-keyword">new</span> JMenuBar();<span class="hljs-comment">//菜单栏</span>JMenu jm1 = <span class="hljs-keyword">new</span> JMenu(<span class="hljs-string">"选项"</span>);<span class="hljs-comment">//菜单</span>JMenu jm2 = <span class="hljs-keyword">new</span> JMenu(<span class="hljs-string">"设置"</span>);JMenu jm3 = <span class="hljs-keyword">new</span> JMenu(<span class="hljs-string">"帮助"</span>);JMenuItem jm1_1 = <span class="hljs-keyword">new</span> JMenuItem(<span class="hljs-string">"重新开始"</span>);<span class="hljs-comment">//菜单项</span>JMenuItem jm1_2 = <span class="hljs-keyword">new</span> JMenuItem(<span class="hljs-string">" 排行榜"</span>);JMenuItem jm1_3 = <span class="hljs-keyword">new</span> JMenuItem(<span class="hljs-string">"退出游戏"</span>);JMenuItem jm2_1 = <span class="hljs-keyword">new</span> JMenuItem(<span class="hljs-string">"更换棋盘"</span>);JMenuItem jm2_2 = <span class="hljs-keyword">new</span> JMenuItem(<span class="hljs-string">"更换棋子"</span>);JMenuItem jm3_1 = <span class="hljs-keyword">new</span> JMenuItem(<span class="hljs-string">"关于我们"</span>);<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Wumain</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;   p =<span class="hljs-keyword">new</span> pan();   <span class="hljs-keyword">this</span>.setSize(<span class="hljs-number">585</span>,<span class="hljs-number">600</span>);<span class="hljs-comment">//设置窗体大小</span>   <span class="hljs-keyword">this</span>.setLocation(<span class="hljs-number">200</span>,<span class="hljs-number">100</span>);<span class="hljs-comment">//设窗体位置</span>   <span class="hljs-keyword">this</span>.add(p);<span class="hljs-comment">//默认添加到中间</span>   <span class="hljs-keyword">this</span>.setResizable(<span class="hljs-keyword">false</span>);<span class="hljs-comment">//设置此窗体是否可由用户调整大小。</span>   <span class="hljs-keyword">this</span>.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class="hljs-comment">// 设置用户在此窗体上发起 "close" 时默认执行的操作</span>   jm1.add(jm1_1);   jm1.add(jm1_2);   jm1.add(jm1_3);   jm2.add(jm2_1);   jm2.add(jm2_2);   jm3.add(jm3_1);   menuber.add(jm1);   menuber.add(jm2);   menuber.add(jm3);    <span class="hljs-keyword">this</span>.setJMenuBar(menuber);<span class="hljs-comment">//设置此窗体的菜单栏。</span>   <span class="hljs-keyword">this</span>.addMouseListener(p);<span class="hljs-comment">//给面板添加监听事件</span>   jm1_1.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;<span class="hljs-comment">//重新开始的监听事件</span><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;p.row;i++)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j=<span class="hljs-number">0</span>;j&lt;p.col;j++)&#123;p.num[i][j] = <span class="hljs-number">0</span>;&#125;&#125;p.canSetqizi = <span class="hljs-keyword">true</span>;p.qizi_num = <span class="hljs-number">0</span>;repaint();<span class="hljs-comment">//重绘此组件。</span>&#125;&#125;);   jm1_2.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;<span class="hljs-comment">//排行榜监听事件</span>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;String msg =<span class="hljs-string">"排行榜\n"</span> +<span class="hljs-string">"局数      步数      结果\n"</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;p.paihanglist.size();i++)&#123;paihangbang ph = p.paihanglist.get(i);      msg = msg+<span class="hljs-string">"   "</span>+ph.getJushu()      +<span class="hljs-string">"          "</span>+ph.getBushu()      +<span class="hljs-string">"          "</span>+ph.getJieguo()+<span class="hljs-string">"\n"</span>;&#125;JOptionPane.showMessageDialog(<span class="hljs-keyword">null</span>, msg);<span class="hljs-comment">//显示消息</span>   &#125;&#125;);   jm1_3.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;<span class="hljs-comment">//退出游戏菜单项的监听事件</span><span class="hljs-comment">//匿名虚构类</span><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;System.exit(<span class="hljs-number">0</span>);<span class="hljs-comment">//退出即可</span>&#125;&#125;);   jm2_1.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;<span class="hljs-comment">//更换棋盘</span><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;Random r = <span class="hljs-keyword">new</span> Random();<span class="hljs-keyword">int</span> n = r.nextInt(<span class="hljs-number">8</span>);<span class="hljs-comment">//产生[0,8)的随机数左闭右开</span>String qipan_name = <span class="hljs-string">"qipan"</span>+n+<span class="hljs-string">".jpg"</span>;p.qipan_name = qipan_name;repaint();&#125;&#125;);   jm2_2.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;<span class="hljs-comment">//更换棋子</span><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;Random r = <span class="hljs-keyword">new</span> Random();<span class="hljs-keyword">int</span> n = r.nextInt(<span class="hljs-number">8</span>);<span class="hljs-comment">//产生[0,8)的随机数左闭右开</span>String qizi1_name = <span class="hljs-string">"c"</span>+n+<span class="hljs-string">".png"</span>;<span class="hljs-comment">//产生的n是[0,8)的随机数</span>String qizi2_name = <span class="hljs-string">"c"</span>+(n+<span class="hljs-number">1</span>)+<span class="hljs-string">".png"</span>;<span class="hljs-comment">//这里设置n+1一方面是避免两个</span><span class="hljs-comment">//棋子一样，另一方面棋子有8这个图片所以n=7时，会产生8这张图片，避免了8这张图片不存在的现象</span>p.qizi1_name = qizi1_name;p.qizi2_name = qizi2_name;repaint();&#125;&#125;);   jm3_1.addActionListener(<span class="hljs-keyword">new</span> ActionListener() &#123;<span class="hljs-comment">//关于我们，这里就是简单的游戏介绍</span><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> </span>&#123;String msg =<span class="hljs-string">"关于我们\n"</span> +<span class="hljs-string">"1、玩家先落子;\n"</span> +<span class="hljs-string">"2、形成5颗同色连子即为赢;\n\n\n"</span> +<span class="hljs-string">"     制作人：王豪杰"</span>;JOptionPane.showMessageDialog(<span class="hljs-keyword">null</span>, msg);&#125;&#125;);   <span class="hljs-keyword">this</span>.setVisible(<span class="hljs-keyword">true</span>);<span class="hljs-comment">//显示该窗体，必须有这句话</span>&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;Wumain w = <span class="hljs-keyword">new</span> Wumain();&#125;&#125;</code></pre></div><h3 id="pan-java"><a href="#pan-java" class="headerlink" title="pan.java"></a>pan.java</h3><blockquote><p>棋盘的面板，该棋盘核心代码：当我方下够超过3个以上构成直线棋子，对方就会进行围堵。</p></blockquote><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> game2;<span class="hljs-keyword">import</span> java.awt.Graphics;<span class="hljs-keyword">import</span> java.awt.Image;<span class="hljs-keyword">import</span> java.awt.event.MouseEvent;<span class="hljs-keyword">import</span> java.awt.event.MouseListener;<span class="hljs-keyword">import</span> java.util.ArrayList;<span class="hljs-keyword">import</span> java.util.List;<span class="hljs-keyword">import</span> java.util.Locale;<span class="hljs-keyword">import</span> java.util.Random;<span class="hljs-keyword">import</span> javax.swing.ImageIcon;<span class="hljs-keyword">import</span> javax.swing.JOptionPane;<span class="hljs-keyword">import</span> javax.swing.JPanel;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">pan</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JPanel</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">MouseListener</span></span>&#123;<span class="hljs-comment">/**</span><span class="hljs-comment"> * </span><span class="hljs-comment"> */</span><span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>;<span class="hljs-keyword">int</span> row = <span class="hljs-number">15</span>;<span class="hljs-comment">//数组下标</span><span class="hljs-keyword">int</span> col = <span class="hljs-number">15</span>;<span class="hljs-comment">//数组上标</span>String qipan_name = <span class="hljs-string">"qipan1.jpg"</span>;String qizi1_name = <span class="hljs-string">"c1.png"</span>;String qizi2_name = <span class="hljs-string">"c2.png"</span>;<span class="hljs-keyword">int</span> num[][] = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[row][col];<span class="hljs-comment">//0：标示该位置为空，1：标示红棋子，2：标示黑棋子</span><span class="hljs-keyword">boolean</span> canSetqizi = <span class="hljs-keyword">true</span>;<span class="hljs-comment">//定义boolean值，用来判断该位置是否有子</span><span class="hljs-keyword">int</span> qizi_num = <span class="hljs-number">0</span>;<span class="hljs-comment">//定义记录落子数</span>List&lt;paihangbang&gt; paihanglist = <span class="hljs-keyword">new</span> ArrayList&lt;paihangbang&gt;();<span class="hljs-comment">//定义集合，用来存储排行榜</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">paint</span><span class="hljs-params">(Graphics g)</span></span>&#123;<span class="hljs-comment">//在这个面板中绘制图案，在界面进行刷新时就会被调用。</span><span class="hljs-keyword">super</span>.paint(g);Image img= <span class="hljs-keyword">new</span> ImageIcon(<span class="hljs-string">"img/"</span>+qipan_name).getImage();<span class="hljs-comment">//调入棋盘图片，首先加载图片</span>g.drawImage(img, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">567</span>, <span class="hljs-number">567</span>, <span class="hljs-keyword">this</span>);<span class="hljs-comment">// 绘制指定图像中已缩放到适合指定矩形内部的图像。</span><span class="hljs-comment">//绘制棋盘</span>Image c1= <span class="hljs-keyword">new</span> ImageIcon(<span class="hljs-string">"img/"</span>+qizi1_name).getImage();<span class="hljs-comment">//getImage()方法：返回此图标的 Image。</span>Image c2= <span class="hljs-keyword">new</span> ImageIcon(<span class="hljs-string">"img/"</span>+qizi2_name).getImage();<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;num.length;i++)&#123;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>;j&lt;num[i].length;j++)&#123;<span class="hljs-keyword">if</span>(num[i][j] == <span class="hljs-number">1</span>)&#123;g.drawImage(c1, i*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, j*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-keyword">this</span>);<span class="hljs-comment">//其实就是画个图片</span><span class="hljs-comment">//绘制指定图像中已缩放到适合指定矩形内部的图像。c1:棋子图案，然后是坐标，大小，和通知对象</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num[i][j] == <span class="hljs-number">2</span>)&#123;g.drawImage(c2, i*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, j*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-keyword">this</span>);&#125;&#125;<span class="hljs-comment">//重绘棋子</span>&#125;<span class="hljs-comment">//重载整个界面（防止最小化后原内容丢失）</span>&#125;<span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span>[] getLoc(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y) &#123;<span class="hljs-comment">//这个就是当你的棋子数在水平方向，竖直方向，或者斜方向的棋子数&gt;3,</span><span class="hljs-comment">//对方会判断有危险，就会堵你，这个就是核心所在</span><span class="hljs-keyword">int</span> count = <span class="hljs-number">1</span>;<span class="hljs-comment">//定义计数器，用于计算棋子数</span><span class="hljs-keyword">int</span>[] wz1 = <span class="hljs-keyword">null</span>;<span class="hljs-keyword">int</span>[] wz2 = <span class="hljs-keyword">null</span>;<span class="hljs-comment">//定义数组，用来存储危险位置</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<span class="hljs-keyword">if</span>(num[i][y] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[i][y] == <span class="hljs-number">0</span>)&#123;wz1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;i,y&#125;;<span class="hljs-comment">//获取左边的危险位置坐标</span>&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//左</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x+<span class="hljs-number">1</span>;i&lt;row;i++)&#123;<span class="hljs-keyword">if</span>(num[i][y] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[i][y] == <span class="hljs-number">0</span>)&#123;wz2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;i,y&#125;;<span class="hljs-comment">//获取右边位置危险坐标</span>&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//右</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">if</span>(wz1 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz1;<span class="hljs-comment">//判断返回左边危险位置</span>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(wz2 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz2;<span class="hljs-comment">//判断返回右边危险位置</span>&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;&#125;&#125;<span class="hljs-comment">//左右</span>count = <span class="hljs-number">1</span>;wz1 = <span class="hljs-keyword">null</span>;wz2 = <span class="hljs-keyword">null</span>;<span class="hljs-comment">//初始化所有参数</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j =y-<span class="hljs-number">1</span>;j&gt;=<span class="hljs-number">0</span>;j--)&#123;<span class="hljs-keyword">if</span>(num[x][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[x][j] == <span class="hljs-number">0</span>)&#123;wz1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;x,j&#125;;&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//上</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j =y+<span class="hljs-number">1</span>;j&lt;col;j++)&#123;<span class="hljs-keyword">if</span>(num[x][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[x][j] == <span class="hljs-number">0</span>)&#123;wz2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;x,j&#125;;&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//下</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">if</span>(wz1 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz1;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(wz2 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz2;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;&#125;&#125;<span class="hljs-comment">//上下</span>count = <span class="hljs-number">1</span>;wz1 = <span class="hljs-keyword">null</span>;wz2 = <span class="hljs-keyword">null</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x-<span class="hljs-number">1</span>,j =y-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>&amp;&amp;j&gt;=<span class="hljs-number">0</span>;i--,j--)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[i][j] == <span class="hljs-number">0</span>)&#123;wz1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;i,j&#125;;&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//左上</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x+<span class="hljs-number">1</span>,j =y+<span class="hljs-number">1</span>;i&lt;row&amp;&amp;j&lt;col;i++,j++)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[i][j] == <span class="hljs-number">0</span>)&#123;wz2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;i,j&#125;;&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//右下</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">if</span>(wz1 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz1;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(wz2 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz2;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;&#125;&#125;<span class="hljs-comment">//左上右下</span>count = <span class="hljs-number">1</span>;wz1 = <span class="hljs-keyword">null</span>;wz2 = <span class="hljs-keyword">null</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x-<span class="hljs-number">1</span>,j =y+<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>&amp;&amp;j&lt;col;i--,j++)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[i][j] == <span class="hljs-number">0</span>)&#123;wz1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;i,j&#125;;&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//左下</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x+<span class="hljs-number">1</span>,j =y-<span class="hljs-number">1</span>;i&lt;row&amp;&amp;j&gt;=<span class="hljs-number">0</span>;i++,j--)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">if</span>(num[i][j] == <span class="hljs-number">0</span>)&#123;wz2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;i,j&#125;;&#125;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//右上</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">3</span>)&#123;<span class="hljs-keyword">if</span>(wz1 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz1;&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(wz2 != <span class="hljs-keyword">null</span>)&#123;<span class="hljs-keyword">return</span> wz2;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;&#125;&#125;<span class="hljs-comment">//左下右上</span><span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">iswin</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x,<span class="hljs-keyword">int</span> y)</span></span>&#123;<span class="hljs-comment">//判断是否赢</span><span class="hljs-keyword">int</span> count = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)&#123;<span class="hljs-keyword">if</span>(num[i][y] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//左</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x+<span class="hljs-number">1</span>;i&lt;row;i++)&#123;<span class="hljs-keyword">if</span>(num[i][y] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//右</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">5</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;&#125;<span class="hljs-comment">//左右</span>count = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j =y-<span class="hljs-number">1</span>;j&gt;=<span class="hljs-number">0</span>;j--)&#123;<span class="hljs-keyword">if</span>(num[x][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//上</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j =y+<span class="hljs-number">1</span>;j&lt;col;j++)&#123;<span class="hljs-keyword">if</span>(num[x][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//下</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">5</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;&#125;<span class="hljs-comment">//上下</span>count = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x-<span class="hljs-number">1</span>,j =y-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>&amp;&amp;j&gt;=<span class="hljs-number">0</span>;i--,j--)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//左上</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x+<span class="hljs-number">1</span>,j =y+<span class="hljs-number">1</span>;i&lt;row&amp;&amp;j&lt;col;i++,j++)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//右下</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">5</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;&#125;<span class="hljs-comment">//左上右下</span>count = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x-<span class="hljs-number">1</span>,j =y+<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>&amp;&amp;j&lt;col;i--,j++)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//左下</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i =x+<span class="hljs-number">1</span>,j =y-<span class="hljs-number">1</span>;i&lt;row&amp;&amp;j&gt;=<span class="hljs-number">0</span>;i++,j--)&#123;<span class="hljs-keyword">if</span>(num[i][j] == num[x][y])&#123;count++;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//右上</span><span class="hljs-keyword">if</span>(count&gt;=<span class="hljs-number">5</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;&#125;<span class="hljs-comment">//左下右上</span><span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;&#125;<span class="hljs-comment">//判断输赢</span><span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mouseClicked</span><span class="hljs-params">(MouseEvent e)</span> </span>&#123;<span class="hljs-comment">// 鼠标按键在组件上单击（按下并释放）时调用</span><span class="hljs-keyword">if</span>(canSetqizi)&#123;Graphics g = <span class="hljs-keyword">this</span>.getGraphics();<span class="hljs-comment">//为组件创建一个图形上下文。如果组件当前是不可显示的，则此方法返回 null。</span><span class="hljs-keyword">int</span> checkusersuccess = <span class="hljs-number">0</span>;<span class="hljs-comment">//标示是否落子成功</span><span class="hljs-keyword">int</span> x = e.getX();<span class="hljs-comment">//返回事件相对于源组件的水平 x 坐标。</span><span class="hljs-keyword">int</span> y = e.getY();<span class="hljs-comment">//返回事件相对于源组件的垂直 y 坐标。</span><span class="hljs-comment">//获取鼠标点击的位置</span>Image c1= <span class="hljs-keyword">new</span> ImageIcon(<span class="hljs-string">"img/"</span>+qizi1_name).getImage();<span class="hljs-keyword">int</span> i = (x-<span class="hljs-number">25</span>)/<span class="hljs-number">35</span>;<span class="hljs-comment">//减去行数多余的部分，/35就是获取的行数</span><span class="hljs-keyword">int</span> j = (y-<span class="hljs-number">75</span>)/<span class="hljs-number">35</span>;<span class="hljs-comment">//减去列数多余的部分，/35就是获取的列数</span><span class="hljs-comment">//i，j就是获取棋子的坐标</span><span class="hljs-keyword">if</span>(num[i][j] != <span class="hljs-number">0</span>)&#123;<span class="hljs-comment">//因为1代表红棋，2代表黑棋，所以!=0就是该位置已经存在棋，不能再下</span>             JOptionPane.showMessageDialog(<span class="hljs-keyword">null</span>, <span class="hljs-string">"该位置有旗子，请重新落子"</span>);             <span class="hljs-keyword">return</span>;<span class="hljs-comment">//             判断有子，终止本次事件，进行下次事件触发</span>&#125;<span class="hljs-keyword">else</span>&#123;g.drawImage(c1, i*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, j*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-keyword">this</span>);<span class="hljs-comment">//画出玩家落子</span>num[i][j] = <span class="hljs-number">1</span>;<span class="hljs-comment">//给数组付一个只值，表示该位置有旗子</span>checkusersuccess = <span class="hljs-number">1</span>;<span class="hljs-comment">//代表落子成功</span><span class="hljs-comment">//标示量标示</span>qizi_num++;<span class="hljs-comment">//记录玩家落子步数</span>&#125;<span class="hljs-keyword">boolean</span> b=iswin(i,j);<span class="hljs-keyword">if</span>(b)&#123;JOptionPane.showMessageDialog(<span class="hljs-keyword">null</span>, <span class="hljs-string">"你赢了！"</span>);canSetqizi = <span class="hljs-keyword">false</span>;paihangbang ph = <span class="hljs-keyword">new</span> paihangbang();ph.setJushu(paihanglist.size()+<span class="hljs-number">1</span>);ph.setBushu(qizi_num);<span class="hljs-comment">//棋子步数</span>ph.setJieguo(<span class="hljs-string">"win"</span>);<span class="hljs-comment">//结果状态</span>paihanglist.add(ph);<span class="hljs-keyword">return</span>;&#125;<span class="hljs-comment">//调用boolean判断方法</span><span class="hljs-keyword">try</span> &#123;Thread.sleep(<span class="hljs-number">1000</span>);&#125; <span class="hljs-keyword">catch</span> (InterruptedException e1) &#123;e1.printStackTrace();&#125;<span class="hljs-comment">//时间间隔：玩家落子后的等待</span>Random r = <span class="hljs-keyword">new</span> Random();Image c2 = <span class="hljs-keyword">new</span> ImageIcon(<span class="hljs-string">"img/"</span>+qizi2_name).getImage();<span class="hljs-comment">//调入黑棋子图片</span><span class="hljs-keyword">do</span>&#123;<span class="hljs-keyword">int</span>[] wz =getLoc(i, j);<span class="hljs-keyword">if</span>(wz == <span class="hljs-keyword">null</span>)&#123;i = r.nextInt(<span class="hljs-number">15</span>);j = r.nextInt(<span class="hljs-number">15</span>);&#125;<span class="hljs-keyword">else</span>&#123;i=wz[<span class="hljs-number">0</span>];j=wz[<span class="hljs-number">1</span>];&#125;<span class="hljs-comment">//设置随机的坐标</span>&#125;<span class="hljs-keyword">while</span>(num[i][j] != <span class="hljs-number">0</span>);g.drawImage(c2, i*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, j*<span class="hljs-number">35</span>+<span class="hljs-number">20</span>, <span class="hljs-number">35</span>, <span class="hljs-number">35</span>, <span class="hljs-keyword">this</span>);num[i][j] = <span class="hljs-number">2</span>;<span class="hljs-keyword">boolean</span> d=iswin(i,j);<span class="hljs-keyword">if</span>(d)&#123;JOptionPane.showMessageDialog(<span class="hljs-keyword">null</span>, <span class="hljs-string">"你输了！"</span>);canSetqizi = <span class="hljs-keyword">false</span>;paihangbang ph = <span class="hljs-keyword">new</span> paihangbang();ph.setJushu(paihanglist.size()+<span class="hljs-number">1</span>);ph.setBushu(qizi_num);ph.setJieguo(<span class="hljs-string">"fail"</span>);paihanglist.add(ph);<span class="hljs-keyword">return</span>;&#125;<span class="hljs-comment">//随机电脑落子位置;</span>&#125;&#125;<span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mousePressed</span><span class="hljs-params">(MouseEvent e)</span> </span>&#123;<span class="hljs-comment">//鼠标按键在组件上按下时调用。</span><span class="hljs-comment">// TODO Auto-generated method stub</span>&#125;<span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mouseReleased</span><span class="hljs-params">(MouseEvent e)</span> </span>&#123;<span class="hljs-comment">//鼠标按钮在组件上释放时调用。</span><span class="hljs-comment">// TODO Auto-generated method stub</span>&#125;<span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mouseEntered</span><span class="hljs-params">(MouseEvent e)</span> </span>&#123;<span class="hljs-comment">//鼠标进入到组件上时调用。</span><span class="hljs-comment">// TODO Auto-generated method stub</span>&#125;<span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">mouseExited</span><span class="hljs-params">(MouseEvent e)</span> </span>&#123;<span class="hljs-comment">// 鼠标离开组件时调用。</span><span class="hljs-comment">// TODO Auto-generated method stub</span>&#125;&#125;</code></pre></div><h3 id="paihangbang-java"><a href="#paihangbang-java" class="headerlink" title="paihangbang.java"></a>paihangbang.java</h3><blockquote><p>封装了排行榜中的数据</p></blockquote><div class="hljs"><pre><code class="hljs java"><span class="hljs-keyword">package</span> game2;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">paihangbang</span> </span>&#123;<span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> jushu;<span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> bushu;<span class="hljs-keyword">private</span> String jieguo;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getJushu</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> jushu;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setJushu</span><span class="hljs-params">(<span class="hljs-keyword">int</span> jushu)</span> </span>&#123;<span class="hljs-keyword">if</span>(jushu&lt;<span class="hljs-number">1</span>)&#123;<span class="hljs-keyword">this</span>.jushu = <span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">this</span>.jushu = jushu;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getBushu</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> bushu;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setBushu</span><span class="hljs-params">(<span class="hljs-keyword">int</span> bushu)</span> </span>&#123;<span class="hljs-keyword">this</span>.bushu = bushu;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getJieguo</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-keyword">return</span> jieguo;&#125;<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setJieguo</span><span class="hljs-params">(String jieguo)</span> </span>&#123;<span class="hljs-keyword">this</span>.jieguo = jieguo;&#125;&#125;</code></pre></div><p>源码及其图片资源：</p><div class="hljs"><pre><code class="hljs c++">链接：https:<span class="hljs-comment">//pan.baidu.com/s/1vr6koVFQUF83Hg5RLNPj7Q </span>提取码：<span class="hljs-number">2b</span>fy</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>五子棋游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>picgo-github</title>
    <link href="/2020/07/02/picgo-github/"/>
    <url>/2020/07/02/picgo-github/</url>
    
    <content type="html"><![CDATA[<h2 id="picgo-github搭建免费图传"><a href="#picgo-github搭建免费图传" class="headerlink" title="picgo+github搭建免费图传"></a>picgo+github搭建免费图传</h2><p class="note note-success">新建一个github仓库</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161344.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161336.png" srcset="/img/loading.gif" alt=""></p><p class="note note-success">生成token</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161337.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161338.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161340.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161339.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161341.png" srcset="/img/loading.gif" alt=""></p><p class="note note-success">点击最下边的`Generate token`即可看到显示的token页面。（只显示一次！）</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702162125.png" srcset="/img/loading.gif" alt=""></p><h3 id="配置picgo"><a href="#配置picgo" class="headerlink" title="配置picgo"></a>配置picgo</h3><p>下载地址：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">传送门</a></p><p>速度慢的同志可选这个：</p><p>链接：<a href="https://pan.baidu.com/s/12Hhu5yTL4-ECM54M1oc1Mw" target="_blank" rel="noopener">传送门</a><br>提取码：q3qs<br>安装之后进行配置：</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161342.png" srcset="/img/loading.gif" alt=""></p><ol><li>设定仓库名：username/仓库名（username可填写github用户名）</li><li>设定分支名：master</li><li>设定Token：填写上一步得到的Token。</li><li>指定存储路径：自定义，例：imgs/，相当于在刚刚新建的仓库下新建了一个文件夹。</li><li>设定自定义域名：格式：<a href="https://cdn.jsdelivr.net/gh/username/repo" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/username/repo</a><br>username为GitHub用户名，repo为新建的仓库，用于存储图片</li></ol><p>至此配置完成，可以通过上传区进行上传图片。</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161343.png" srcset="/img/loading.gif" alt=""></p><p>然后到相册中可粘贴格式（格式可自选url，md等）</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702161345.png" srcset="/img/loading.gif" alt=""></p><p>来源：<a href="https://yafine-blog.cn/posts/eb3a.html" target="_blank" rel="noopener">传送门</a></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>picgo+github搭建免费图传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>clion解决多个源文件编译</title>
    <link href="/2020/07/02/clion/"/>
    <url>/2020/07/02/clion/</url>
    
    <content type="html"><![CDATA[<h1 id="Clion如何编译运行多个源文件？"><a href="#Clion如何编译运行多个源文件？" class="headerlink" title="Clion如何编译运行多个源文件？"></a>Clion如何编译运行多个源文件？</h1><h2 id="1新建工程编译运行单个源文件"><a href="#1新建工程编译运行单个源文件" class="headerlink" title="1新建工程编译运行单个源文件"></a><strong>1新建工程编译运行单个源文件</strong></h2><!-- ![clion--1.png](https://i.loli.net/2020/07/02/FPhDUubKpsL8k92.png) --><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152655.png" srcset="/img/loading.gif" alt=""></p><h2 id="2运行第二个源文件"><a href="#2运行第二个源文件" class="headerlink" title="2运行第二个源文件"></a><strong>2运行第二个源文件</strong></h2><p><strong>此时你会发现报错！！！</strong><br><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152253.png" srcset="/img/loading.gif" alt=""></p><!-- ![clion-2 _1_.png](https://i.loli.net/2020/07/02/CHUaE5vh3yqApul.png) --><h1 id="解决办法1："><a href="#解决办法1：" class="headerlink" title="解决办法1："></a><strong>解决办法1：</strong></h1><p><strong>修改cmakelist.text，将</strong></p><p>add_executable(prc1 main.cpp )改成</p><p>add_executable(prc1 practice/test1.cpp )就行了</p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152658.png" srcset="/img/loading.gif" alt=""><br><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152657.png" srcset="/img/loading.gif" alt=""></p><!-- ![clion-3 _1_.png](https://i.loli.net/2020/07/02/UT2wROhCn7DuHXF.png) --><!-- ![clion-4 _1_.png](https://i.loli.net/2020/07/02/oe5wc8pZEUjgBPi.png) --><h2 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a><strong>效果如下</strong></h2><!-- ![clion-5 _1_.png](https://i.loli.net/2020/07/02/2khBLw1jDtrNx79.png) --><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152700.png" srcset="/img/loading.gif" alt=""></p><p><strong>但是这样是不是好费劲？每次都要修改cmakelist.text，尤其是对于那些刷题的同学，=~=！接下来给大家提供一个插件解决这个复杂的问题</strong></p><h1 id="解决办法2：下载插件"><a href="#解决办法2：下载插件" class="headerlink" title="解决办法2：下载插件"></a>解决办法2：下载插件</h1><p><strong>左上角file下点击setting进入</strong></p><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152659.png" srcset="/img/loading.gif" alt=""></p><!-- ![clion-6 _1_.png](https://i.loli.net/2020/07/02/ZVWuvarPhcECeTL.png) --><p><strong>下载之后我们创建一个源文件，进行测试</strong></p><p><strong>在test2下右击鼠标，点击箭头</strong></p><!-- ![clion-7 _1_.png](https://i.loli.net/2020/07/02/zCBfgEYnWAPMSDm.png) --><p><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152656.png" srcset="/img/loading.gif" alt=""><br><strong>自动为我们添加add_executable(test2 practice/test2.cpp)</strong><br><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152701.png" srcset="/img/loading.gif" alt=""></p><!-- ![clion-8 _1_.png](https://i.loli.net/2020/07/02/OAGFYD5EtqHh79K.png) --><p><strong>最后你就可以直接run了（run之前记得切换到你的源文件下！！！！重点）</strong><br><img src="https://cdn.jsdelivr.net/gh/pingfan443/blog-imgs/imgs20200702152702.png" srcset="/img/loading.gif" alt=""></p><!-- ![clion-9 _1_.png](https://i.loli.net/2020/07/02/jnP12kMOQJS3NsY.png) -->]]></content>
    
    
    <categories>
      
      <category>clion</category>
      
    </categories>
    
    
    <tags>
      
      <tag>clion解决多个源文件编译</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>拥有自己的第一个博客</title>
    <link href="/2020/06/23/%E5%86%99%E4%BD%9C/"/>
    <url>/2020/06/23/%E5%86%99%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h1><div class="note note-primary">            <p>一时兴起，创此博客</p>          </div><blockquote><p>2020年是个不可思议的一年，大二下学期在家上网课，刚开始颓废，尤其是数据库安排在周一和周三的第一节，在家从没早起我当然学不进去，就这样日子一天一天混过去了。好再后来又回去补自己缺少的知识，勉强凑合过了考试。暑假本来想着搭建个博客，不知不觉遇到了hexo+fluid主题，爱了。熬了两天终于把博客搭起来主题也搭好了，就剩后期修修改改。</p></blockquote><h2 id="暑假生活"><a href="#暑假生活" class="headerlink" title="暑假生活 "></a>暑假生活 <span class="label label-primary">无聊</span></h2><p>刷题！刷题！刷题！学vue。</p><h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><p>起初是在b站看讲师frank的视频小白搭建博客，学起来的，终于在一番错误之后把博客给简单框架搭起来了，但是毕竟只是个壳子，还需要去找主题，这里找到的Fluid蛮好看的，搭建过程一定多看用户手册！其实很多都在用户手册能够找到，后来也进去了微信群和一群大佬交流，发现自己是有多么的菜。</p><h2 id="当代大学生状态"><a href="#当代大学生状态" class="headerlink" title="当代大学生状态"></a>当代大学生状态</h2><p><code>有人忙的要死，有人闲得要死</code></p>]]></content>
    
    
    <categories>
      
      <category>成长之路</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
